use_x86 =@use_x86@
use_simd=@use_simd@
use_simd_64=@use_simd_64@
use_mpi =@use_mpi@
use_gpu_cuda=@use_cuda@
use_omp = @use_omp@
use_gperf=@use_gperf@
debug_mode=@with_debug@
step_mode=@with_step_mode@
se_mode=@with_interrupt@
tt_mode=@with_tidal_tensor@
orb_mode=@with_orbit@

TARGET=build/@PROG_NAME@ build/petar.hard.debug 

#MT_FLAGS += -D HARD_CM_KICK
MT_FLAGS += -D USE_QUAD
MT_FLAGS += -D SOFT_PERT
MT_FLAGS += -D AR_TTL
MT_FLAGS += -D AR_SLOWDOWN_TREE
#MT_FLAGS += -D AR_TTL_GT_BINARY_INNER
#MT_FLAGS += -D FIX_CHANGEOVER
MT_FLAGS += -D AR_SLOWDOWN_TIMESCALE
#MT_FLAGS += -D AR_SLOWDOWN_MASSRATIO
MT_FLAGS += -D CLUSTER_VELOCITY
MT_FLAGS += -D HARD_CHECK_ENERGY
MT_FLAGS += -D HARD_COUNT_NO_NEIGHBOR
MT_FLAGS += -D ADJUST_GROUP_PRINT
#MT_FLAGS += -D ONLY_SOFT
#MT_FLAGS += -D INTEGRATED_CUTOFF_FUNCTION

ifeq ($(tt_mode),3rd)
MT_FLAGS += -D TIDAL_TENSOR_3RD
endif

ifeq ($(orb_mode),os)
MT_FLAGS += -D ORBIT_SAMPLING
endif

ifneq ($(se_mode),off)
MT_FLAGS += -D STELLAR_EVOLUTION
ifeq ($(se_mode),bse)
MT_FLAGS += -D BSE
CXXLIBS += -L ./bse-interface -lbse -lgfortran
LIBFILES+= bse-interface/libbse.a bse-interface/bse_interface.h
INCLUDE += -I ./bse-interface
TARGET += bse-interface/petar.bse
endif
endif

ifeq ($(step_mode),kdkdk)
MT_FLAGS += -D KDKDK_2ND
else ifeq ($(step_mode),kdkdk4)
MT_FLAGS += -D KDKDK_4TH
endif

OPTFLAGS = @OPTFLAGS@

ifneq ($(debug_mode),no)

DEBFLAGS += -D PETAR_DEBUG
DEBFLAGS += -D AR_DEBUG
DEBFLAGS += -D STABLE_CHECK_DEBUG
DEBFLAGS += -D AR_WARN
DEBFLAGS += -D CLUSTER_DEBUG
DEBFLAGS += -D ARTIFICIAL_PARTICLE_DEBUG
DEBFLAGS += -D HARD_DEBUG
DEBFLAGS += -D NAN_CHECK_DEBUG

#DEBFLAGS += -D AR_COLLECT_DS_MODIFY_INFO

#DEBFLAGS += -D PARTICLE_SIMULATOR_DEBUG_PRINT
#DEBFLAGS += -D HARD_INTERRUPT_PRINT
#DEBFLAGS += -D AR_DEEP_DEBUG
#DEBFLAGS += -D AR_DEBUG_PRINT
#DEBFLAGS += -D CLUSTER_DEBUG_PRINT
#DEBFLAGS += -D HARD_DEBUG_PRINT
#DEBFLAGS += -D CORRECT_FORCE_DEBUG

endif

ifeq ($(debug_flag),g)
OPTFLAGS += -D SANITY_CHECK_REALLOCATABLE_ARRAY
endif

DEBFLAGS += -D AR_DEBUG_DUMP
DEBFLAGS += -D HARD_DUMP

#-------------------------------------
ifeq ($(use_mpi),yes) 
FDPSFLAGS = -DPARTICLE_SIMULATOR_MPI_PARALLEL
FDPSFLAGS += -DMPICH_IGNORE_CXX_SEEKC
endif # mpi

#-------------------------------------

ifeq ($(use_omp),yes)
CXXFLAGS += @OPENMP_CXXFLAGS@
CXXFLAGS += -D PARTICLE_SIMULATOR_THREAD_PARALLEL
endif # omp

#---------------------------------------------
ifeq ($(use_gpu_cuda),yes)
CUDAFLAGS = -D PARTICLE_SIMULATOR_GPU_MULIT_WALK_INDEX
FDPSFLAGS += $(CUDAFLAGS)
NVCC = @NVCC@ @CUDAFLAGS@ -Xcompiler="$(OPTFLAGS) $(CXXFLAGS) $(CUDAFLAGS) $(MT_FLAGS)"
CXXLIBS += @CUDALIBS@
OBJS += build/force_gpu_cuda.o
CXXFLAGS += -D USE_GPU
CXXFLAGS += -D GPU_PROFILE
endif # gpu cuda

#-------------------------------------
ifeq ($(use_x86),yes)
CXXFLAGS += -DINTRINSIC_X86

#-------------------------------------
ifeq ($(use_simd),yes)
CXXFLAGS += @SIMDFLAGS@
CXXFLAGS += -D DIV_FIX
CXXFLAGS += -D USE_SIMD
ifeq ($(use_simd_64),yes)
CXXFLAGS += -D P3T_64BIT
endif # simd 64
endif  # simd
#-------------------------------------

endif # x86

#-------------------------------------
ifeq ($(use_gperf),yes)
CXXFLAGS += @GPERFFLAGS@
CXXFLAGS += -D GPERF_PROFILE
CXXLIBS += @GPERFLIBS@
endif # gperf
#-------------------------------------


CXXFLAGS += -D PROFILE

CXX=@CXX@
#CXXNOMPI=@CXXNOMPI@

VPATH=./src ./build
INCLUDE += -I./src @INCLUDE@

SRC = main.cc ${shell ls ./src/*.hpp} 

all: $(TARGET)

build:
	[ -d build ] || mkdir build

build/@PROG_NAME@:  $(SRC) $(OBJS) $(LIBFILES) |build
	$(CXX) $(INCLUDE) $(OPTFLAGS) $(CXXFLAGS) $(FDPSFLAGS) $(MT_FLAGS) $(DEBFLAGS) -o $@ $< $(OBJS) $(CXXLIBS)

SIMD_DEBFLAGS += -DRSQRT_NR_EPJ_X2
SIMD_DEBFLAGS += -DAVX_PRELOAD
#SIMD_DEBFLAGS += -DRSQRT_NR_EPJ_X4
#SIMD_DEBFLAGS += -DCALC_SP_64bit
#SIMD_DEBFLAGS += -DRSQRT_NR_SPJ_X2
#SIMD_DEBFLAGS += -DRSQRT_NR_SPJ_X4

DEBUG_OPT_FLAGS = @DEBFLAGS@ -D SANITY_CHECK_REALLOCATABLE_ARRAY
HARD_DEBFLAGS+= -D AR_DEBUG -D AR_DEBUG_DUMP -D AR_DEBUG_PRINT -D AR_WARN -D HARD_DEBUG -D HARD_DEBUG_PRINT -D ADJUST_GROUP_DEBUG -D HERMITE_DEBUG -D AR_COLLECT_DS_MODIFY_INFO -D STABLE_CHECK_DEBUG_PRINT -D ARTIFICIAL_PARTICLE_DEBUG -D ARTIFICIAL_PARTICLE_DEBUG_PRINT
HARD_MT_FLAGS += -D AR_TTL -D AR_SLOWDOWN_INNER -D AR_SLOWDOWN_TIMESCALE -D HARD_CHECK_ENERGY 

HARD_SRC= io.hpp ptcl.hpp particle_base.hpp hard_assert.hpp cluster_list.hpp hard.hpp hard_ptcl.hpp hermite_interaction.hpp hermite_information.hpp hermite_perturber.hpp ar_interaction.hpp ar_perturber.hpp search_group_candidate.hpp artificial_particles.hpp stability.hpp soft_ptcl.hpp static_variables.hpp tidal_tensor.hpp orbit_sampling.hpp pseudoparticle_multipole.hpp

build/petar.hard.debug: hard_debug.cxx $(HARD_SRC) $(LIBFILES) |build
	$(CXX) $(INCLUDE) $(DEBUG_OPT_FLAGS) $(CXXFLAGS) $(MT_FLAGS) $(HARD_DEBFLAGS) -D HARD_DEBUG_PRINT_TITLE -D STABLE_CHECK_DEBUG -o $@ $< $(CXXLIBS)

build/petar.hard.test: hard_test.cxx $(HARD_SRC) |build
	$(CXX) $(INCLUDE) $(DEBUG_OPT_FLAGS) $(CXXFLAGS) $(HARD_MT_FLAGS) $(HARD_DEBFLAGS) -o $@ $< $(CXXLIBS)

build/petar.simd.test: simd_test.cxx $(OBJS) |build
	$(CXX) $(INCLUDE) $(OPTFLAGS) $(CXXFLAGS) $(SIMD_DEBFLAGS) -DPARTICLE_SIMULATOR_THREAD_PARALLEL $^ -o $@  $(CXXLIBS)

build/petar.tt.test: tidal_tensor_test.cxx |build
	$(CXX) $(INCLUDE) $(DEBUG_OPT_FLAGS) $(CXXFLAGS)  $< -o $@  $(CXXLIBS)

build/force_gpu_cuda.o: force_gpu_cuda.cu |build
	$(NVCC) $(INCLUDE) -c $< -o $@ 

bse-interface/petar.bse: bse-interface
	$(MAKE) -C bse-interface

bse-interface/libbse.a: bse-interface/petar.bse

install: $(TARGET)
	install -d @prefix@/bin/
	install -m 755 $(TARGET) @prefix@/bin/
	ln -sf @prefix@/bin/@PROG_NAME@ @prefix@/bin/petar
	install -m 755 tools/initdata.sh @prefix@/bin/petar.init
	install -m 755 tools/find_dt.sh @prefix@/bin/petar.find.dt
	install -m 755 tools/data_process.py @prefix@/bin/petar.data.process
	install -m 755 tools/movie.py @prefix@/bin/petar.movie
	install -d @prefix@/include/
	install -d @prefix@/include/petar
	install -m 755 tools/analysis/*.py @prefix@/include/petar/

clean:
	rm -f $(TARGET) build/*.o 
	$(MAKE) -C bse-interface clean
